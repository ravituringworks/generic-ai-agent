//! Test loading configuration from config.toml

use the_agency::AgentConfig;

fn main() -> anyhow::Result<()> {
    println!("ðŸ”§ Testing configuration loading from config.toml...\n");

    // Load configuration
    let config = AgentConfig::from_file("config.toml")?;
    println!("âœ… Configuration loaded successfully!\n");

    // Display key settings
    println!("ðŸ“‹ Configuration Summary:");
    println!("   â”œâ”€ LLM Model: {}", config.llm.text_model);
    println!("   â”œâ”€ Embedding Model: {}", config.llm.embedding_model);
    println!("   â”œâ”€ Cache Enabled: {}", config.llm.cache.enabled);
    println!("   â”œâ”€ Cache Max Entries: {}", config.llm.cache.max_entries);
    println!("   â”œâ”€ Cache TTL: {}s", config.llm.cache.ttl_seconds);
    println!("   â”œâ”€ Agent Name: {}", config.agent.name);
    println!(
        "   â””â”€ Task Models: {} configured\n",
        config.llm.task_models.len()
    );

    // Validate configuration
    config.validate()?;
    println!("âœ… Configuration is valid!\n");

    // Show task models
    if !config.llm.task_models.is_empty() {
        println!("ðŸŽ¯ Task-Specific Models:");
        for (task_name, task_config) in &config.llm.task_models {
            println!(
                "   â”œâ”€ {}: {} (temp: {:.2})",
                task_name,
                task_config.model,
                task_config.temperature.unwrap_or(config.llm.temperature)
            );
        }
        println!();
    }

    println!("âœ¨ All checks passed! The configuration is ready to use.");

    Ok(())
}
